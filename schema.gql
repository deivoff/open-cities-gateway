# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Access {
  view: AccessSettings!
  edit: AccessSettings!
  comment: AccessSettings!
  coowner: AccessGroup!
}

enum ACCESS_CODE {
  NONE
  VIEW
  COMMENT
  EDIT
  COOWNER
}

type AccessGroup {
  group: [User!]
}

type AccessSettings {
  group: [User!]
  anyone: Boolean
  role: USER_ROLE
}

enum AccessType {
  default
  city
}

type AuthRedirect {
  url: String!
}

type AuthResponse {
  token: String!
}

type City {
  _id: ID!
  name: String!
  url: String!
  photo: String!
  map: Map!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Geo {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  owner: User!
  layer: Layer!
  geometry: Geometry!
  properties: JSON!
}

input GeoInput {
  geometry: GeometryInput!
  properties: JSON!
  layer: ID!
}

type Geometry {
  type: GeometryType!
  coordinates: GeometryCoords!
}

"""Coordinates scalar type"""
scalar GeometryCoords

input GeometryInput {
  type: GeometryType!
  coordinates: GeometryCoords!
}

enum GeometryType {
  Point
  MultiPoint
  LineString
  MultiLineString
  Polygon
  MultiPolygon
}

type GoogleProvider {
  id: String!
  token: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Layer {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  description: String!
  owner: User!
  access: ACCESS_CODE!
  settings: JSON!
}

input LayerInput {
  name: String!
  description: String!
  settings: JSON!
}

type Map {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  owner: User!
  name: String!
  description: String!
  access: ACCESS_CODE!
  settings: MapSettings!
  layers: [Layer!]!
  draft: Boolean!
}

input MapInput {
  name: String!
  description: String!
  settings: MapSettingInput!
}

input MapSettingInput {
  bbox: [GeometryCoords!]!
  zoom: Int!
}

type MapSettings {
  bbox: [GeometryCoords!]!
  zoom: Int!
}

type Mutation {
  createLayer(mapId: ID!, layerInput: LayerInput!): Layer!
  createGeo(geoInput: GeoInput!): Geo!
  createGeos(geoInput: [GeoInput!]!): [Geo!]!
  createMap(type: AccessType, mapInput: MapInput!): Map!
  authGoogle(code: String!): AuthResponse!
}

type Query {
  users: [User!]!
  layers(mapId: ID!): [Layer!]!
  geos(layerId: ID!): [Geo!]!
  map(id: String!): Map
  maps(userId: ID!): [Map!]!
  cities: [City!]!
  city(url: String!): City
  getGoogleOAuthRedirect: AuthRedirect!
}

type User {
  _id: ID!
  email: String!
  name: UserName!
  role: USER_ROLE!
  photos: [UserPhoto!]!
  social: UserSocial!
}

enum USER_ROLE {
  ADMIN
  RESEARCHER
  USER
}

type UserName {
  familyName: String!
  givenName: String!
}

type UserPhoto {
  url: String!
}

type UserSocial {
  googleProvider: GoogleProvider!
}
