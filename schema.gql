# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

enum ACCESS_CODE {
    COMMENT
    COOWNER
    EDIT
    NONE
    OWNER
    VIEW
}

enum AccessType {
  city
  default
}

type AuthRedirect {
  url: String!
}

type AuthResponse {
  token: String!
}

type City {
    _id: ObjectId!
    map: Map!
  name: String!
  photo: String!
  url: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Geo {
    _id: ObjectId!
    createdAt: DateTime!
  geometry: Geometry!
  layer: Layer!
  owner: User!
  properties: JSON!
  updatedAt: DateTime!
}

input GeoInput {
    geometry: GeometryInput!
    layer: ObjectId!
    properties: JSON!
}

type Geometry {
  coordinates: GeometryCoords!
  type: GeometryType!
}

"""Coordinates scalar type"""
scalar GeometryCoords

input GeometryInput {
  coordinates: GeometryCoords!
  type: GeometryType!
}

enum GeometryType {
  LineString
  MultiLineString
  MultiPoint
  MultiPolygon
  Point
  Polygon
}

type GoogleProvider {
  id: String!
  token: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Layer {
    _id: ObjectId!
    access: ACCESS_CODE!
    configuration: JSON!
    createdAt: DateTime!
  description: String!
  name: String!
  owner: User!
  updatedAt: DateTime!
}

input LayerInput {
    configuration: JSON!
    description: String!
  name: String!
}

type Map {
    _id: ObjectId!
    access: ACCESS_CODE!
  createdAt: DateTime!
  description: String!
  draft: Boolean!
  layers: [Layer!]!
  name: String!
  owner: User!
  settings: MapSettings!
  updatedAt: DateTime!
}

input MapInput {
  description: String!
  name: String!
  settings: MapSettingInput!
}

input MapSettingInput {
  bbox: GeometryCoords!
  zoom: Int!
}

type MapSettings {
  bbox: GeometryCoords!
  zoom: Int!
}

type Mutation {
    authGoogle(code: String!): AuthResponse!
    createGeo(geoInput: GeoInput!): Geo!
    createGeos(geoInput: [GeoInput!]!): [Geo!]!
    createLayer(layerInput: LayerInput!, mapId: ObjectId!): Layer!
    createMap(mapInput: MapInput!, type: AccessType): Map!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
    cities: [City!]!
    city(url: String!): City
    geos(layerId: ObjectId!): [Geo!]!
    getGoogleOAuthRedirect: AuthRedirect!
    layer(layerId: ObjectId!): Layer
    layers(mapId: ObjectId!): [Layer!]!
    map(mapId: ObjectId!): Map
    maps(userId: ObjectId!): [Map!]!
    users: [User!]!
}

type User {
    _id: ObjectId!
    email: String!
  name: UserName!
  photos: [UserPhoto!]!
  role: USER_ROLE!
  social: UserSocial!
}

enum USER_ROLE {
  ADMIN
  RESEARCHER
  USER
}

type UserName {
  familyName: String!
  givenName: String!
}

type UserPhoto {
  url: String!
}

type UserSocial {
  googleProvider: GoogleProvider!
}
